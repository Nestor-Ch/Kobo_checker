tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>% View()
gregexpr("\\{[^}]+\\}", selected(${b2_new_arrivals_register}, 'yes'), perl = TRUE)
gregexpr("\\{[^}]+\\}", 'selected(${b2_new_arrivals_register}', 'yes'), perl = TRUE)
gregexpr("\\{[^}]+\\}"," selected(${b2_new_arrivals_register}, 'yes'"), perl = TRUE)
gregexpr("\\{[^}]+\\}"," selected(${b2_new_arrivals_register}, 'yes')", perl = TRUE)
str_replace(" selected(${b2_new_arrivals_register}, 'yes')", "\\{([^]]+)\\}.*", "\\1")
str_replace(" selected(${b2_new_arrivals_register}, 'yes')", "\\{([^]+)\\}.*", "\\1")
str_replace(" selected(${b2_new_arrivals_register}, 'yes')", "\\{(^)\\}.*", "\\1")
str_extract(" selected(${b2_new_arrivals_register}, 'yes')", "(?<=\\{).*(?=\\})")
kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant),
grepl('select_multiple|select_one',type)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_extract(single_rel, "(?<=\\{).*(?=\\})"))
kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant),
grepl('select_multiple|select_one',type)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})")))
kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant),
grepl('select_multiple|select_one',type)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})"))) %>% View()
help(left_join)
kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant),
grepl('select_multiple|select_one',type)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})")))
kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant),
grepl('select_multiple|select_one',type)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})"))) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_rel = rownames), by = c('single_rel'='name'))
check_rel_basic <- kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant),
grepl('select_multiple|select_one',type)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})"))) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_rel = rownames), by = c('single_rel'='name'))
View(check_rel_basic)
is.na(check_rel_basic$rownames_rel) %>% sum()
kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})"))) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_rel = rownames), by = c('single_rel'='name'))
kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})"))) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_rel = rownames), by = c('single_rel'='name')) %>% View()
View(kobo_data.t)
kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})"))) %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_rel)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_rel = rownames), by = c('single_rel'='name'))
kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})"))) %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_rel)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_rel = rownames), by = c('single_rel'='name')) %>% View()
check_rel_basic <- kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})"))) %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_rel)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_rel = rownames), by = c('single_rel'='name'))
any(is.na(check_rel_basic$rownames_rel))
check_rel_basic %>%
filter(is.na(rownames_rel))
check_rel_basic <- kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})"))) %>%
filter(!grepl('settlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_rel)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_rel = rownames), by = c('single_rel'='name'))
any(is.na(check_rel_basic$rownames_rel))
check_rel_basic <- kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})"))) %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_rel)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_rel = rownames), by = c('single_rel'='name'))
check_rel_basic %>%
filter(is.na(rownames_rel))
kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})"))) %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_rel)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_rel = rownames), by = c('single_rel'='name')) %>%
mutate(rownames = as.numeric(rownames),
rownames_rel = as.numeric(rownames_rel))
kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})"))) %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_rel)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_rel = rownames), by = c('single_rel'='name')) %>%
mutate(rownames = as.numeric(rownames),
rownames_rel = as.numeric(rownames_rel),
rest_rel = rownames_rel>rownames)
check_rel_basic <- kobo_data.t %>%
select(rownames,name, type, relevant) %>%
filter(!is.na(relevant)) %>%
mutate(single_rel = str_squish(relevant)) %>%
tidyr::separate_rows(single_rel,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_rel,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_rel)) %>%
mutate(single_rel = str_squish(str_extract(single_rel, "(?<=\\{).*(?=\\})"))) %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_rel)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_rel = rownames), by = c('single_rel'='name')) %>%
mutate(rownames = as.numeric(rownames),
rownames_rel = as.numeric(rownames_rel),
rest_rel = rownames_rel>rownames)
any(check_rel_basic$rest_rel)
check_rel_basic$rest_rel
any(na.omit(check_rel_basic$rest_rel))
check_rel_basic %>%
filter(is.na(rest_rel))
check_rel_basic %>%
filter(rest_rel==TRUE)
check_rel_basic %>%
filter(rest_rel==TRUE) %>%
rename(value = relevant) %>%
mutate(column = 'relevant',
issue = 'Missing relevance variable',
file = 'tool.survey')
check_rel_basic %>%
filter(rest_rel==TRUE) %>%
rename(value = relevant) %>%
mutate(column = 'relevant',
issue = 'Missing relevance variable',
file = 'tool.survey') %>%
select( rownames,column,value,issue,file)
check_rel_basic$rest_rel
check_rel_basic
runApp('Kobo_checker.R')
kobo_data.t %>%
select(rownames,name, type, constraint) %>%
filter(!is.na(constraint)) %>%
mutate(single_con = str_squish(constraint)) %>%
tidyr::separate_rows(single_con,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_con,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_con)) %>%
mutate(single_con = str_squish(str_extract(single_con, "(?<=\\{).*(?=\\})"))) %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_rel)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_rel = rownames), by = c('single_rel'='name')) %>%
mutate(rownames = as.numeric(rownames),
rownames_rel = as.numeric(rownames_rel),
rest_rel = rownames_rel>rownames)
kobo_data.t %>%
select(rownames,name, type, constraint) %>%
filter(!is.na(constraint)) %>%
mutate(single_con = str_squish(constraint)) %>%
tidyr::separate_rows(single_con,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_con,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_con)) %>%
mutate(single_con = str_squish(str_extract(single_con, "(?<=\\{).*(?=\\})"))) %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_con)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_con = rownames), by = c('single_rel'='name')) %>%
mutate(rownames = as.numeric(rownames),
rownames_con = as.numeric(rownames_con),
rest_rel = rownames_con>rownames)
kobo_data.t %>%
select(rownames,name, type, constraint) %>%
filter(!is.na(constraint)) %>%
mutate(single_con = str_squish(constraint)) %>%
tidyr::separate_rows(single_con,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_con,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_con)) %>%
mutate(single_con = str_squish(str_extract(single_con, "(?<=\\{).*(?=\\})"))) %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_con)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_con = rownames), by = c('single_con'='name')) %>%
mutate(rownames = as.numeric(rownames),
rownames_con = as.numeric(rownames_con),
rest_con = rownames_con>rownames)
kobo_data.t %>%
select(rownames,name, type, constraint) %>%
filter(!is.na(constraint)) %>%
mutate(single_con = str_squish(constraint)) %>%
tidyr::separate_rows(single_con,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_con,sep='\\bor\\b|\\band\\b')
kobo_data.t %>%
select(rownames,name, type, constraint) %>%
filter(!is.na(constraint)) %>%
mutate(single_con = str_squish(constraint)) %>%
tidyr::separate_rows(single_con,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_con,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_con))
kobo_data.t %>%
select(rownames,name, type, constraint) %>%
filter(!is.na(constraint)) %>%
mutate(single_con = str_squish(constraint)) %>%
tidyr::separate_rows(single_con,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_con,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_con)) %>%
mutate(single_con = str_squish(str_extract(single_con, "(?<=\\{).*(?=\\})")))
kobo_data.t %>%
select(rownames,name, type, constraint) %>%
filter(!is.na(constraint)) %>%
mutate(single_con = str_squish(constraint)) %>%
tidyr::separate_rows(single_con,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_con,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_con)) %>% View()
kobo_data.t %>%
select(rownames,name, type, constraint) %>%
filter(!is.na(constraint)) %>%
mutate(single_con = str_squish(constraint)) %>%
tidyr::separate_rows(single_con,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_con,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_con)) %>%
mutate(single_con = str_squish(str_extract(single_con, "(?<=\\{).*(?=\\})"))) %>%
filter(!is.na(single_con))
kobo_data.t %>%
select(rownames,name, type, constraint) %>%
filter(!is.na(constraint)) %>%
mutate(single_con = str_squish(constraint)) %>%
tidyr::separate_rows(single_con,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_con,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_con)) %>%
mutate(single_con = str_squish(str_extract(single_con, "(?<=\\{).*(?=\\})"))) %>%
filter(!is.na(single_con)) %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_con)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_con = rownames), by = c('single_con'='name')) %>%
mutate(rownames = as.numeric(rownames),
rownames_con = as.numeric(rownames_con),
rest_con = rownames_con>rownames)
# check the same for constraints
check_con_basic <- kobo_data.t %>%
select(rownames,name, type, constraint) %>%
filter(!is.na(constraint)) %>%
mutate(single_con = str_squish(constraint)) %>%
tidyr::separate_rows(single_con,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_con,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_con)) %>%
mutate(single_con = str_squish(str_extract(single_con, "(?<=\\{).*(?=\\})"))) %>%
filter(!is.na(single_con)) %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_con)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_con = rownames), by = c('single_con'='name')) %>%
mutate(rownames = as.numeric(rownames),
rownames_con = as.numeric(rownames_con),
rest_con = rownames_con>rownames)
View(check_con_basic)
# check the same for constraints
check_con_basic <- kobo_data.t %>%
select(rownames,name, type, constraint) %>%
filter(!is.na(constraint)) %>%
mutate(single_con = str_squish(constraint)) %>%
tidyr::separate_rows(single_con,sep="(?<!\\.|\\})\\,") %>%
tidyr::separate_rows(single_con,sep='\\bor\\b|\\band\\b') %>%
filter(grepl('selected',single_con)) %>%
mutate(single_con = str_squish(str_extract(single_con, "(?<=\\{).*(?=\\})"))) %>%
filter(!is.na(single_con)) %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',single_con)) %>%
left_join(kobo_data.t %>%
select(name,rownames) %>%
rename(rownames_con = rownames), by = c('single_con'='name')) %>%
mutate(rownames = as.numeric(rownames),
rownames_con = as.numeric(rownames_con),
rest_con = rownames_con>rownames)
any(is.na(check_con_basic$rownames_rel))
any(is.na(check_con_basic$rownames_con))
check_con_basic %>%
filter(is.na(rownames_con)) %>%
rename(value = relevant) %>%
mutate(column = 'relevant',
issue = 'Missing relevance variable',
file = 'tool.survey') %>%
select( rownames,column,value,issue,file) %>%
mutate(priority = 'First priority')
check_con_basic %>%
filter(is.na(rownames_con)) %>%
rename(value = constraint) %>%
mutate(column = 'constraint',
issue = 'Missing relevance variable',
file = 'tool.survey') %>%
select( rownames,column,value,issue,file) %>%
mutate(priority = 'First priority')
any(na.omit(check_con_basic$rest_con))
check_con_basic %>%
filter(rest_con==TRUE) %>%
rename(value = constraint) %>%
mutate(column = 'constraint',
issue = "Variable is linked to a constraint is located before the variable's row",
file = 'tool.survey') %>%
select( rownames,column,value,issue,file) %>%
mutate(priority = 'First priority')
check_con_basic
check_con_basic %>%
filter(rest_con==TRUE) %>%
rename(value = constraint) %>%
mutate(column = 'constraint',
issue = "Variable is linked to a constraint",single_con ," that is located before the variable's row",
file = 'tool.survey') %>%
select( rownames,column,value,issue,file) %>%
mutate(priority = 'First priority')
check_con_basic_order <- check_con_basic %>%
filter(rest_con==TRUE) %>%
rename(value = constraint) %>%
mutate(column = 'constraint',
issue = "Variable is linked to a constraint",single_con ," that is located before the variable's row",
file = 'tool.survey') %>%
select( rownames,column,value,issue,file) %>%
mutate(priority = 'First priority')
View(check_con_basic_order)
check_con_basic_order <- check_con_basic %>%
filter(rest_con==TRUE) %>%
rename(value = constraint) %>%
mutate(column = 'constraint',
issue = paste0("Variable is linked to a constraint ",single_con ," that is located before the variable's row"),
file = 'tool.survey') %>%
select( rownames,column,value,issue,file) %>%
mutate(priority = 'First priority')
runApp('Kobo_checker.R')
runApp('Kobo_checker.R')
library(DT)
library(shiny)
library(echarts4r)
library(tidyverse)
library(utilityR)
library(readxl)
library(data.table)
library(stringdist)
library(visNetwork)
library(plotly)
library(stringr)
source("www/utils.R")
source("www/utils_network.R")
kobo_data.tool <- load.tool.survey('C:/Users/reach/Downloads/Tool_MCI_redone_AA_loc.xlsx','label::English')
kobo_data.tool <- load.tool.choices('C:/Users/reach/Downloads/Tool_MCI_redone_AA_loc.xlsx','label::English')
kobo_data.t <- kobo_data.tool %>%
rownames_to_column(var='rownames') %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',list_name))
# get only geo list names
kobo_data.c.geo <- kobo_data.choices %>%
rownames_to_column(var='rownames') %>%
filter(grepl('raion|hromada|oblast',list_name))
kobo_data.tool <- load.tool.survey('C:/Users/reach/Downloads/Tool_MCI_redone_AA_loc.xlsx','label::English')
kobo_data.choices <- load.tool.choices('C:/Users/reach/Downloads/Tool_MCI_redone_AA_loc.xlsx','label::English')
kobo_data.t <- kobo_data.tool %>%
rownames_to_column(var='rownames') %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',list_name))
# get only geo list names
kobo_data.c.geo <- kobo_data.choices %>%
rownames_to_column(var='rownames') %>%
filter(grepl('raion|hromada|oblast',list_name))
# get everything else
kobo_data.c <- kobo_data.choices %>%
rownames_to_column(var='rownames') %>%
filter(!grepl('\\bsettlement|\\brectangle\\b|\\brectangles\\b|geo_location|\\bpoint\\b|\\bhub\\b|raion|hromada|oblast|center_idp',list_name),
!grepl("^UKRs\\d+$", name),
!grepl("^UA\\d+$", name))
kobo_data.c.geo %>%
select(name,rownames) %>%
filter(!grepl('^UA',name))
kobo_data.c.geo %>%
select(name,rownames) %>%
filter(!grepl('^UA',name),
!grepl('prefer',name))
kobo_data.c.geo %>%
select(name,rownames) %>%
filter(!grepl('^UA',name),
!grepl('prefer|refuse',name))
# test if all geo names are p codes
wrong_geo_entries <- kobo_data.c.geo %>%
select(name,rownames) %>%
filter(!grepl('^UA',name),
!grepl('prefer|refuse',name))
kobo_data.t %>%
select(rownames, starts_with('label::')) %>%
filter(rowSums(is.na(select(., starts_with('label::')))) < ncol(select(., starts_with('label::')))) %>%
filter(rowSums(is.na(.))>0) %>%
select(any_of(c("rownames", names(.)[colSums(is.na(.)) > 0])))
kobo_data.t %>%
select(rownames, starts_with('label::')) %>%
filter(rowSums(is.na(select(., starts_with('label::')))) < ncol(select(., starts_with('label::')))) %>%
filter(rowSums(is.na(.))>0) %>%
select(any_of(c("rownames", names(.)[colSums(is.na(.)) > 0])))
# survey page
labels_check.t <- kobo_data.t %>%
select(rownames, starts_with('label::')) %>%
filter(rowSums(is.na(select(., starts_with('label::')))) < ncol(select(., starts_with('label::')))) %>%
filter(rowSums(is.na(.))>0) %>%
select(any_of(c("rownames", names(.)[colSums(is.na(.)) > 0])))
labels_check.t
kobo_data.c %>%
select(rownames, starts_with('label::')) %>%
filter(rowSums(is.na(select(., starts_with('label::')))) < ncol(select(., starts_with('label::')))) %>%
filter(rowSums(is.na(.))>0) %>%
select(any_of(c("rownames", names(.)[colSums(is.na(.)) > 0])))
runApp('Kobo_checker.R')
runApp('Kobo_checker.R')
kobo_data.t %>%
select(rownames, starts_with('label::'))
kobo_data.t %>%
select(rownames, starts_with('label::')) %>%
filter(rowSums(is.na(select(., starts_with('label::')))) < ncol(select(., starts_with('label::')))) %>%
filter(rowSums(is.na(.))>0)
View(kobo_data.t)
kobo_data.t %>%
select(rownames, starts_with('label::')) %>% View()
kobo_data.t %>%
select(rownames, starts_with('label::')) %>% View()
unique(kobo_data.t$q.type)
t <- read_xlsx('C:/Users/reach/Downloads/Tool_MCI_redone_AA_loc.xlsx',sheet = 'survey')
t <- t %>% select(name) %>% add_rownames('rowname')
kobo_data.t %>% select(name,rownames) %>% left_join(t) %>% View()
kobo_data.tool <- load.tool.survey('C:/Users/reach/Downloads/Tool_MCI_redone_AA_loc.xlsx','label::English')
View(kobo_data.tool)
load.tool.survey
